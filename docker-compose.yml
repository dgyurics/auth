version: "3.9"

services:
  nginx:
    image: nginx
    build:
      context: ./api-gateway/
    restart: "no"
    ports:
      - "3000:80"
    depends_on:
      - auth
    networks:
      - public-network
      - secure-network
      - auth-network

  auth:
    image: auth
    build:
      context: ./auth-server/
    env_file:
      - ./auth-server/.env
    depends_on:
      - postgres
      - redis
    networks:
      - auth-network
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure

  secure:
    image: secure
    build:
      context: ./secure-server/
    restart: always
    networks:
      - secure-network
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:12.9
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth    
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/
    networks:
      - auth-network

  redis:
    image: redis:6.2
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    volumes: 
      - redis:/data
      # TODO create a redis.conf file
      # - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - auth-network

networks:
  public-network:
    driver: bridge
    internal: false
  secure-network:
    driver: bridge
    internal: true
  auth-network:
    driver: bridge
    internal: true

volumes:
  pg_data:
  redis:
