version: "3.9"

services:
  ui:
    build:
      context: ./ui/
    ports:
      - "3000:3000"
    networks:
      - public-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s

  nginx:
    build:
      context: ./api-gateway/
    ports:
      - "3001:80"
    depends_on:
      - auth
      - secure
    networks:
      - public-network
      - internal-one-network
      - internal-two-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s

  # auth:
  #   build:
  #     context: ./auth-server/
  #   ports:
  #     - "8080:8080"
  #   env_file:
  #     - ./auth-server/.env
  #   depends_on:
  #     - postgres
  #     - redis
  #   networks:
  #     - internal-one-network
  #     - private-network
  #   deploy:
  #     mode: replicated
  #     replicas: 3
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       max_attempts: 3
  #       window: 20s

  auth:
    build:
      context: ./auth-server/
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    env_file:
      - ./auth-server/.env
    volumes:
      - ./auth-server/:/app
    depends_on:
      - postgres
      - redis
    networks:
      - internal-one-network
      - private-network
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 20s

  secure:
    build:
      context: ./secure-server/
    ports:
      - "9000:8080"
    networks:
      - internal-two-network
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 20s

  postgres:
    build:
      context: ./auth-server/database/
    container_name: postgres
    restart: "on-failure"
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/
    networks:
      - private-network

  redis:
    image: redis:6.2
    container_name: redis
    restart: "on-failure"
    ports:
      - "6379:6379"
    volumes: 
      - redis:/data
    networks:
      - private-network

networks:
  public-network:
    driver: bridge
    internal: false
  internal-one-network:
    driver: bridge
    internal: true
  internal-two-network:
    driver: bridge
    internal: true
  private-network:
    driver: bridge
    internal: true

volumes:
  pg_data:
  redis:
